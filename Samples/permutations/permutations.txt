using System;

class Permutations {	
	bool NextPermutation(int[] a, int first, int last) {
		if(first == last)
			return false;
			
		int i = first;
		++i;
		if(i == last)
			return false;
			
		i = last;
		--i;
		
		while(true) {
			int ii = i;
			--i;
			if(a[i] < a[ii]) {
				int j = last;
				while(!(a[i] < a[--j])) {}
				Swap(a, i, j);
				Reverse(a, ii, last);
				return true;
			}
			if(i == first) {
				Reverse(a, first, last);
				return false;
			}
		}
	}

	void Swap(int[] a, int i, int j) {
		int tmp = a[i];
		a[i] = a[j];
		a[j] = tmp;
	}
	
	void Reverse(int[] a, int first, int last) {
		while(first < last) {
			Swap(a, first, --last);
			++first;
		}
	}

	shared void Main() {
		Permutations p = new Permutations();
		int[] t = new int[5];
		t[0] = 1;
		t[1] = 2;
		t[2] = 3;
		t[3] = 4;
		t[4] = 5;
		do {
			for(int i = 0; i < 5; ++i)
				Console.Write(t[i].ToString() + " ");
			Console.WriteLine();	
		} while(p.NextPermutation(t, 0, 5));
	}
}